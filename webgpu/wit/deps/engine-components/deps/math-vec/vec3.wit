package math:vec@0.1.0;

interface vec3 {
  // 3D vector using floats
  record vec3-f32 { x: f32, y: f32, z: f32 }
  record vec3-f64 { x: f64, y: f64, z: f64 }

  // 3D vector using signed integers
  record vec3-s8  { x: s8,  y: s8,  z: s8  }
  record vec3-s16 { x: s16, y: s16, z: s16 }
  record vec3-s32 { x: s32, y: s32, z: s32 }
  record vec3-s64 { x: s64, y: s64, z: s64 }

  // 3D vector using unsigned integers
  record vec3-u8  { x: u8,  y: u8,  z: u8  }
  record vec3-u16 { x: u16, y: u16, z: u16 }
  record vec3-u32 { x: u32, y: u32, z: u32 }
  record vec3-u64 { x: u64, y: u64, z: u64 }

  /// Constructors for vec3
  float32: func() -> vec3-f32;
  float64: func() -> vec3-f64;

  int8:    func() -> vec3-s8;
  int16:   func() -> vec3-s16;
  int32:   func() -> vec3-s32;
  int64:   func() -> vec3-s64;

  uint8:   func() -> vec3-u8;
  uint16:  func() -> vec3-u16;
  uint32:  func() -> vec3-u32;
  uint64:  func() -> vec3-u64;
}